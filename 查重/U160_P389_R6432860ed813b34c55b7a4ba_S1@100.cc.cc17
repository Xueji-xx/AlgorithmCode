#include<stdio.h>long long ans = 0;int a[500005], b[500005], n;void merge(int low, int mid, int high) {int i, j, k;for (i = low, j = mid + 1, k = i; i <= mid && j <= high; k++) {	if (b[i] <= b[j])		a[k] = b[i++];	else {		a[k] = b[j++];		ans += mid - i + 1;	}}while (i <= mid) {	a[k++] = b[i++];}while (j <= high) {	a[k++] = b[j++];}for (i = low; i <= high; i++) {	b[i] = a[i];}}void mergesort(int low, int high) {if (low < high) {	int mid;	mid = (low + high) / 2;	mergesort(low, mid);	mergesort(mid + 1, high);	merge(low, mid, high);}}int main() {	scanf("%d", &n);	int i;	for (i = 1; i <= n; i++) {		scanf("%d", &a[i]);	}	for (i = 1; i <= n; i++) {		b[i] = a[i];	}	mergesort(1, n);	printf("%lld", ans);}#include<stdio.h>longlongans=0;inta[500005],b[500005],n;voidmerge(intlow,intmid,inthigh){inti,j,k;for(i=low,j=mid+1,k=i;i<=mid&&j<=high;k++){	if(b[i]<=b[j])		a[k]=b[i++];	else{		a[k]=b[j++];		ans+=mid-i+1;	}}while(i<=mid){	a[k++]=b[i++];}while(j<=high){	a[k++]=b[j++];}for(i=low;i<=high;i++){	b[i]=a[i];}}voidmergesort(intlow,inthigh){if(low<high){	intmid;	mid=(low+high)/2;	mergesort(low,mid);	mergesort(mid+1,high);	merge(low,mid,high);}}intmain(){	scanf("%d",&n);	inti;	for(i=1;i<=n;i++){		scanf("%d",&a[i]);	}	for(i=1;i<=n;i++){		b[i]=a[i];	}	mergesort(1,n);	printf("%lld",ans);}#include<stdio.h>longlongans=0;inta[500005],b[500005],n;voidmerge(intlow,intmid,inthigh){inti,j,k;for(i=low,j=mid+1,k=i;i<=mid&&j<=high;k++){if(b[i]<=b[j])a[k]=b[i++];else{a[k]=b[j++];ans+=mid-i+1;}}while(i<=mid){a[k++]=b[i++];}while(j<=high){a[k++]=b[j++];}for(i=low;i<=high;i++){b[i]=a[i];}}voidmergesort(intlow,inthigh){if(low<high){intmid;mid=(low+high)/2;mergesort(low,mid);mergesort(mid+1,high);merge(low,mid,high);}}intmain(){scanf("%d",&n);inti;for(i=1;i<=n;i++){scanf("%d",&a[i]);}for(i=1;i<=n;i++){b[i]=a[i];}mergesort(1,n);printf("%lld",ans);}#include<stdio.h>longlongans=0;inta[500005],b[500005],n;voidmerge(intlow,intmid,inthigh){inti,j,k;for(i=low,j=mid+1,k=i;i<=mid&&j<=high;k++){if(b[i]<=b[j])a[k]=b[i++];else{a[k]=b[j++];ans+=mid-i+1;}}while(i<=mid){a[k++]=b[i++];}while(j<=high){a[k++]=b[j++];}for(i=low;i<=high;i++){b[i]=a[i];}}voidmergesort(intlow,inthigh){if(low<high){intmid;mid=(low+high)/2;mergesort(low,mid);mergesort(mid+1,high);merge(low,mid,high);}}intmain(){scanf("%d",&n);inti;for(i=1;i<=n;i++){scanf("%d",&a[i]);}for(i=1;i<=n;i++){b[i]=a[i];}mergesort(1,n);printf("%lld",ans);}