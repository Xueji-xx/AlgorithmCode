#include <iostream>#include <cmath>using namespace std;void printPyramid(int n, char c) {	int height = floor(sqrt(n));	int usedBricks = 0;	for (int i = 1; i <= height; i++) {		string row = "";		for (int j = 1; j <= 2 * i - 1; j++) {			row += c;			usedBricks++;		}		cout << string(height - i, ' ') << row << endl;	}	int remainingBricks = n - usedBricks;	cout << remainingBricks << endl;}int main() {	int n;	char c;	cin >> n >> c;	printPyramid(n, c);	return 0;}#include<iostream>#include<cmath>usingnamespacestd;voidprintPyramid(intn,charc){	intheight=floor(sqrt(n));	intusedBricks=0;	for(inti=1;i<=height;i++){		stringrow="";		for(intj=1;j<=2*i-1;j++){			row+=c;			usedBricks++;		}		cout<<string(height-i,'')<<row<<endl;	}	intremainingBricks=n-usedBricks;	cout<<remainingBricks<<endl;}intmain(){	intn;	charc;	cin>>n>>c;	printPyramid(n,c);	return0;}#include<iostream>#include<cmath>usingnamespacestd;voidprintPyramid(intn,charc){intheight=floor(sqrt(n));intusedBricks=0;for(inti=1;i<=height;i++){stringrow="";for(intj=1;j<=2*i-1;j++){row+=c;usedBricks++;}cout<<string(height-i,'')<<row<<endl;}intremainingBricks=n-usedBricks;cout<<remainingBricks<<endl;}intmain(){intn;charc;cin>>n>>c;printPyramid(n,c);return0;}#include<iostream>#include<cmath>usingnamespacestd;voidprintPyramid(intn,charc){intheight=floor(sqrt(n));intusedBricks=0;for(inti=1;i<=height;i++){stringrow="";for(intj=1;j<=2*i-1;j++){row+=c;usedBricks++;}cout<<string(height-i,'')<<row<<endl;}intremainingBricks=n-usedBricks;cout<<remainingBricks<<endl;}intmain(){intn;charc;cin>>n>>c;printPyramid(n,c);return0;}