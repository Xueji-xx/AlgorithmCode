#include <iostream>#include <stack>using namespace std;string decode(string s) {    stack<pair<int, string>> st;    string str = "";    for (char c : s) {        if (isdigit(c)) {            if (!st.empty() && !isdigit(st.top().second.back())) {                st.top().first = st.top().first * 10 + c - '0';            } else {                st.push({c - '0', ""});            }        } else if (c == '[') {            st.push({0, ""});        } else if (c == ']') {            auto p = st.top();            st.pop();            string tmp = p.second;            while (p.first-- > 1) {                tmp += p.second;            }            if (st.empty()) {                str += tmp;            } else {                st.top().second += tmp;            }        } else {            if (st.empty()) {                str += c;            } else {                st.top().second += c;            }        }    }    return str;}int main() {    string s;    getline(cin, s);    cout << decode(s) << endl;    return 0;}#include<iostream>#include<stack>usingnamespacestd;stringdecode(strings){stack<pair<int,string>>st;stringstr="";for(charc:s){if(isdigit(c)){if(!st.empty()&&!isdigit(st.top().second.back())){st.top().first=st.top().first*10+c-'0';}else{st.push({c-'0',""});}}elseif(c=='['){st.push({0,""});}elseif(c==']'){autop=st.top();st.pop();stringtmp=p.second;while(p.first-->1){tmp+=p.second;}if(st.empty()){str+=tmp;}else{st.top().second+=tmp;}}else{if(st.empty()){str+=c;}else{st.top().second+=c;}}}returnstr;}intmain(){strings;getline(cin,s);cout<<decode(s)<<endl;return0;}#include<iostream>#include<stack>usingnamespacestd;stringdecode(strings){stack<pair<int,string>>st;stringstr="";for(charc:s){if(isdigit(c)){if(!st.empty()&&!isdigit(st.top().second.back())){st.top().first=st.top().first*10+c-'0';}else{st.push({c-'0',""});}}elseif(c=='['){st.push({0,""});}elseif(c==']'){autop=st.top();st.pop();stringtmp=p.second;while(p.first-->1){tmp+=p.second;}if(st.empty()){str+=tmp;}else{st.top().second+=tmp;}}else{if(st.empty()){str+=c;}else{st.top().second+=c;}}}returnstr;}intmain(){strings;getline(cin,s);cout<<decode(s)<<endl;return0;}#include<iostream>#include<stack>usingnamespacestd;stringdecode(strings){stack<pair<int,string>>st;stringstr="";for(charc:s){if(isdigit(c)){if(!st.empty()&&!isdigit(st.top().second.back())){st.top().first=st.top().first*10+c-'0';}else{st.push({c-'0',""});}}elseif(c=='['){st.push({0,""});}elseif(c==']'){autop=st.top();st.pop();stringtmp=p.second;while(p.first-->1){tmp+=p.second;}if(st.empty()){str+=tmp;}else{st.top().second+=tmp;}}else{if(st.empty()){str+=c;}else{st.top().second+=c;}}}returnstr;}intmain(){strings;getline(cin,s);cout<<decode(s)<<endl;return0;}