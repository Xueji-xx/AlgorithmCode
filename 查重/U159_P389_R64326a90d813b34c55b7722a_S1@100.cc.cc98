#include <iostream>#include <vector>using namespace std;long long merge_sort(vector<int>& arr, int left, int right) {    if (left >= right) {        return 0;    }    int mid = (left + right) / 2;    long long count = merge_sort(arr, left, mid) + merge_sort(arr, mid + 1, right);    int i = left, j = mid + 1;    vector<int> sorted;    while (i <= mid && j <= right) {        if (arr[i] <= arr[j]) {            sorted.push_back(arr[i]);            i++;        } else {            sorted.push_back(arr[j]);            j++;            count += mid - i + 1;        }    }    while (i <= mid) {        sorted.push_back(arr[i]);        i++;    }    while (j <= right) {        sorted.push_back(arr[j]);        j++;    }    for (int i = left; i <= right; i++) {        arr[i] = sorted[i - left];    }    return count;}int main() {    int n;    cin >> n;    vector<int> arr(n);    for (int i = 0; i < n; i++) {        cin >> arr[i];    }    cout << merge_sort(arr, 0, n - 1) << endl;    return 0;}#include<iostream>#include<vector>usingnamespacestd;longlongmerge_sort(vector<int>&arr,intleft,intright){if(left>=right){return0;}intmid=(left+right)/2;longlongcount=merge_sort(arr,left,mid)+merge_sort(arr,mid+1,right);inti=left,j=mid+1;vector<int>sorted;while(i<=mid&&j<=right){if(arr[i]<=arr[j]){sorted.push_back(arr[i]);i++;}else{sorted.push_back(arr[j]);j++;count+=mid-i+1;}}while(i<=mid){sorted.push_back(arr[i]);i++;}while(j<=right){sorted.push_back(arr[j]);j++;}for(inti=left;i<=right;i++){arr[i]=sorted[i-left];}returncount;}intmain(){intn;cin>>n;vector<int>arr(n);for(inti=0;i<n;i++){cin>>arr[i];}cout<<merge_sort(arr,0,n-1)<<endl;return0;}#include<iostream>#include<vector>usingnamespacestd;longlongmerge_sort(vector<int>&arr,intleft,intright){if(left>=right){return0;}intmid=(left+right)/2;longlongcount=merge_sort(arr,left,mid)+merge_sort(arr,mid+1,right);inti=left,j=mid+1;vector<int>sorted;while(i<=mid&&j<=right){if(arr[i]<=arr[j]){sorted.push_back(arr[i]);i++;}else{sorted.push_back(arr[j]);j++;count+=mid-i+1;}}while(i<=mid){sorted.push_back(arr[i]);i++;}while(j<=right){sorted.push_back(arr[j]);j++;}for(inti=left;i<=right;i++){arr[i]=sorted[i-left];}returncount;}intmain(){intn;cin>>n;vector<int>arr(n);for(inti=0;i<n;i++){cin>>arr[i];}cout<<merge_sort(arr,0,n-1)<<endl;return0;}#include<iostream>#include<vector>usingnamespacestd;longlongmerge_sort(vector<int>&arr,intleft,intright){if(left>=right){return0;}intmid=(left+right)/2;longlongcount=merge_sort(arr,left,mid)+merge_sort(arr,mid+1,right);inti=left,j=mid+1;vector<int>sorted;while(i<=mid&&j<=right){if(arr[i]<=arr[j]){sorted.push_back(arr[i]);i++;}else{sorted.push_back(arr[j]);j++;count+=mid-i+1;}}while(i<=mid){sorted.push_back(arr[i]);i++;}while(j<=right){sorted.push_back(arr[j]);j++;}for(inti=left;i<=right;i++){arr[i]=sorted[i-left];}returncount;}intmain(){intn;cin>>n;vector<int>arr(n);for(inti=0;i<n;i++){cin>>arr[i];}cout<<merge_sort(arr,0,n-1)<<endl;return0;}