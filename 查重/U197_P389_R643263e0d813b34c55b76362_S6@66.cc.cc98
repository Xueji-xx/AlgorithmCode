#include<iostream>using namespace std;const int N=100010;int q[N],t[N],n;long long res;void merge_sort(int l,int r){    if(l>=r) return;        int mid=l+r>>1;    merge_sort(l,mid),merge_sort(mid+1,r);        int k=0,i=l,j=mid+1;    while(i<=mid&&j<=r)    {        if(q[i]<=q[j]) t[k++]=q[i++];        else        {            t[k++]=q[j++];            res+=mid-i+1;        }        }    while(i<=mid) t[k++]=q[i++];    while(j<=r) t[k++]=q[j++];        for(i=l,j=0;i<=r;i++,j++) q[i]=t[j];}int main(){    cin >> n;    for(int i=0;i<n;i++) cin >> q[i];        merge_sort(0,n-1);    cout << res << endl;        return 0;}#include<iostream>usingnamespacestd;constintN=100010;intq[N],t[N],n;longlongres;voidmerge_sort(intl,intr){if(l>=r)return;intmid=l+r>>1;merge_sort(l,mid),merge_sort(mid+1,r);intk=0,i=l,j=mid+1;while(i<=mid&&j<=r){if(q[i]<=q[j])t[k++]=q[i++];else{t[k++]=q[j++];res+=mid-i+1;}}while(i<=mid)t[k++]=q[i++];while(j<=r)t[k++]=q[j++];for(i=l,j=0;i<=r;i++,j++)q[i]=t[j];}intmain(){cin>>n;for(inti=0;i<n;i++)cin>>q[i];merge_sort(0,n-1);cout<<res<<endl;return0;}#include<iostream>usingnamespacestd;constintN=100010;intq[N],t[N],n;longlongres;voidmerge_sort(intl,intr){if(l>=r)return;intmid=l+r>>1;merge_sort(l,mid),merge_sort(mid+1,r);intk=0,i=l,j=mid+1;while(i<=mid&&j<=r){if(q[i]<=q[j])t[k++]=q[i++];else{t[k++]=q[j++];res+=mid-i+1;}}while(i<=mid)t[k++]=q[i++];while(j<=r)t[k++]=q[j++];for(i=l,j=0;i<=r;i++,j++)q[i]=t[j];}intmain(){cin>>n;for(inti=0;i<n;i++)cin>>q[i];merge_sort(0,n-1);cout<<res<<endl;return0;}#include<iostream>usingnamespacestd;constintN=100010;intq[N],t[N],n;longlongres;voidmerge_sort(intl,intr){if(l>=r)return;intmid=l+r>>1;merge_sort(l,mid),merge_sort(mid+1,r);intk=0,i=l,j=mid+1;while(i<=mid&&j<=r){if(q[i]<=q[j])t[k++]=q[i++];else{t[k++]=q[j++];res+=mid-i+1;}}while(i<=mid)t[k++]=q[i++];while(j<=r)t[k++]=q[j++];for(i=l,j=0;i<=r;i++,j++)q[i]=t[j];}intmain(){cin>>n;for(inti=0;i<n;i++)cin>>q[i];merge_sort(0,n-1);cout<<res<<endl;return0;}