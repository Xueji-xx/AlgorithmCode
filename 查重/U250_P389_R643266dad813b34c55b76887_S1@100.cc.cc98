#include <stdio.h>#define MAXN 1000000int a[MAXN], tmp[MAXN];long long cnt = 0; // 逆序对的数目void merge_sort(int l, int r){    if (l >= r) return;    int mid = (l + r) / 2;    merge_sort(l, mid);    merge_sort(mid + 1, r);    int i = l, j = mid + 1, k = 0;    while (i <= mid && j <= r) {        if (a[i] <= a[j]) {            tmp[k++] = a[i++];        } else {            tmp[k++] = a[j++];            cnt += mid - i + 1; // 统计逆序对的数目        }    }    while (i <= mid) tmp[k++] = a[i++];    while (j <= r) tmp[k++] = a[j++];    for (i = l, j = 0; i <= r; i++, j++) a[i] = tmp[j];}int main(){    int n;    scanf("%d", &n);    for (int i = 0; i < n; i++) {        scanf("%d", &a[i]);    }    merge_sort(0, n - 1);    printf("%lld\n", cnt);    return 0;}#include<stdio.h>#defineMAXN1000000inta[MAXN],tmp[MAXN];longlongcnt=0;//逆序对的数目voidmerge_sort(intl,intr){if(l>=r)return;intmid=(l+r)/2;merge_sort(l,mid);merge_sort(mid+1,r);inti=l,j=mid+1,k=0;while(i<=mid&&j<=r){if(a[i]<=a[j]){tmp[k++]=a[i++];}else{tmp[k++]=a[j++];cnt+=mid-i+1;//统计逆序对的数目}}while(i<=mid)tmp[k++]=a[i++];while(j<=r)tmp[k++]=a[j++];for(i=l,j=0;i<=r;i++,j++)a[i]=tmp[j];}intmain(){intn;scanf("%d",&n);for(inti=0;i<n;i++){scanf("%d",&a[i]);}merge_sort(0,n-1);printf("%lld\n",cnt);return0;}#include<stdio.h>#defineMAXN1000000inta[MAXN],tmp[MAXN];longlongcnt=0;//逆序对的数目voidmerge_sort(intl,intr){if(l>=r)return;intmid=(l+r)/2;merge_sort(l,mid);merge_sort(mid+1,r);inti=l,j=mid+1,k=0;while(i<=mid&&j<=r){if(a[i]<=a[j]){tmp[k++]=a[i++];}else{tmp[k++]=a[j++];cnt+=mid-i+1;//统计逆序对的数目}}while(i<=mid)tmp[k++]=a[i++];while(j<=r)tmp[k++]=a[j++];for(i=l,j=0;i<=r;i++,j++)a[i]=tmp[j];}intmain(){intn;scanf("%d",&n);for(inti=0;i<n;i++){scanf("%d",&a[i]);}merge_sort(0,n-1);printf("%lld\n",cnt);return0;}#include<stdio.h>#defineMAXN1000000inta[MAXN],tmp[MAXN];longlongcnt=0;//逆序对的数目voidmerge_sort(intl,intr){if(l>=r)return;intmid=(l+r)/2;merge_sort(l,mid);merge_sort(mid+1,r);inti=l,j=mid+1,k=0;while(i<=mid&&j<=r){if(a[i]<=a[j]){tmp[k++]=a[i++];}else{tmp[k++]=a[j++];cnt+=mid-i+1;//统计逆序对的数目}}while(i<=mid)tmp[k++]=a[i++];while(j<=r)tmp[k++]=a[j++];for(i=l,j=0;i<=r;i++,j++)a[i]=tmp[j];}intmain(){intn;scanf("%d",&n);for(inti=0;i<n;i++){scanf("%d",&a[i]);}merge_sort(0,n-1);printf("%lld\n",cnt);return0;}