#include <stdio.h>long long merge_sort(int nums[], int left, int right) {    if (left >= right) {        return 0;    }    int mid = (left + right) / 2;    long long count = merge_sort(nums, left, mid) + merge_sort(nums, mid+1, right);    int i = left, j = mid+1, k = 0;    int tmp[right-left+1];    while (i <= mid && j <= right) {        if (nums[i] <= nums[j]) {            tmp[k++] = nums[i++];        } else {            tmp[k++] = nums[j++];            count += mid - i + 1;        }    }    while (i <= mid) {        tmp[k++] = nums[i++];    }    while (j <= right) {        tmp[k++] = nums[j++];    }    for (i = left, k = 0; i <= right; i++, k++) {        nums[i] = tmp[k];    }    return count;}int main() {    int n;    scanf("%d", &n);    int nums[n];    for (int i = 0; i < n; i++) {        scanf("%d", &nums[i]);    }    printf("%lld\n", merge_sort(nums, 0, n-1));    return 0;}#include<stdio.h>longlongmerge_sort(intnums[],intleft,intright){if(left>=right){return0;}intmid=(left+right)/2;longlongcount=merge_sort(nums,left,mid)+merge_sort(nums,mid+1,right);inti=left,j=mid+1,k=0;inttmp[right-left+1];while(i<=mid&&j<=right){if(nums[i]<=nums[j]){tmp[k++]=nums[i++];}else{tmp[k++]=nums[j++];count+=mid-i+1;}}while(i<=mid){tmp[k++]=nums[i++];}while(j<=right){tmp[k++]=nums[j++];}for(i=left,k=0;i<=right;i++,k++){nums[i]=tmp[k];}returncount;}intmain(){intn;scanf("%d",&n);intnums[n];for(inti=0;i<n;i++){scanf("%d",&nums[i]);}printf("%lld\n",merge_sort(nums,0,n-1));return0;}#include<stdio.h>longlongmerge_sort(intnums[],intleft,intright){if(left>=right){return0;}intmid=(left+right)/2;longlongcount=merge_sort(nums,left,mid)+merge_sort(nums,mid+1,right);inti=left,j=mid+1,k=0;inttmp[right-left+1];while(i<=mid&&j<=right){if(nums[i]<=nums[j]){tmp[k++]=nums[i++];}else{tmp[k++]=nums[j++];count+=mid-i+1;}}while(i<=mid){tmp[k++]=nums[i++];}while(j<=right){tmp[k++]=nums[j++];}for(i=left,k=0;i<=right;i++,k++){nums[i]=tmp[k];}returncount;}intmain(){intn;scanf("%d",&n);intnums[n];for(inti=0;i<n;i++){scanf("%d",&nums[i]);}printf("%lld\n",merge_sort(nums,0,n-1));return0;}#include<stdio.h>longlongmerge_sort(intnums[],intleft,intright){if(left>=right){return0;}intmid=(left+right)/2;longlongcount=merge_sort(nums,left,mid)+merge_sort(nums,mid+1,right);inti=left,j=mid+1,k=0;inttmp[right-left+1];while(i<=mid&&j<=right){if(nums[i]<=nums[j]){tmp[k++]=nums[i++];}else{tmp[k++]=nums[j++];count+=mid-i+1;}}while(i<=mid){tmp[k++]=nums[i++];}while(j<=right){tmp[k++]=nums[j++];}for(i=left,k=0;i<=right;i++,k++){nums[i]=tmp[k];}returncount;}intmain(){intn;scanf("%d",&n);intnums[n];for(inti=0;i<n;i++){scanf("%d",&nums[i]);}printf("%lld\n",merge_sort(nums,0,n-1));return0;}