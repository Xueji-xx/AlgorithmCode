def merge_sort(a):    s = 0    if len(a) <= 1: return 0    mid = len(a) // 2    l = a[:mid]    r = a[mid:]    s += merge_sort(l) + merge_sort(r)    i = j = k = 0    while (i < len(l) and j < len(r)):        if (l[i] <= r[j]):            a[k] = l[i]            i += 1            k += 1        else:            a[k] = r[j]            j += 1            k += 1            s += len(l) - i    while (i < len(l)):        a[k] = l[i]        i += 1        k += 1    while (j < len(r)):        a[k] = r[j]        j += 1        k += 1    return sn = int(input())a = [int(i) for i in input().split()]print(merge_sort(a))defmerge_sort(a):s=0iflen(a)<=1:return0mid=len(a)//2l=a[:mid]r=a[mid:]s+=merge_sort(l)+merge_sort(r)i=j=k=0while(i<len(l)andj<len(r)):if(l[i]<=r[j]):a[k]=l[i]i+=1k+=1else:a[k]=r[j]j+=1k+=1s+=len(l)-iwhile(i<len(l)):a[k]=l[i]i+=1k+=1while(j<len(r)):a[k]=r[j]j+=1k+=1returnsn=int(input())a=[int(i)foriininput().split()]print(merge_sort(a))defmerge_sort(a):s=0iflen(a)<=1:return0mid=len(a)//2l=a[:mid]r=a[mid:]s+=merge_sort(l)+merge_sort(r)i=j=k=0while(i<len(l)andj<len(r)):if(l[i]<=r[j]):a[k]=l[i]i+=1k+=1else:a[k]=r[j]j+=1k+=1s+=len(l)-iwhile(i<len(l)):a[k]=l[i]i+=1k+=1while(j<len(r)):a[k]=r[j]j+=1k+=1returnsn=int(input())a=[int(i)foriininput().split()]print(merge_sort(a))defmerge_sort(a):s=0iflen(a)<=1:return0mid=len(a)//2l=a[:mid]r=a[mid:]s+=merge_sort(l)+merge_sort(r)i=j=k=0while(i<len(l)andj<len(r)):if(l[i]<=r[j]):a[k]=l[i]i+=1k+=1else:a[k]=r[j]j+=1k+=1s+=len(l)-iwhile(i<len(l)):a[k]=l[i]i+=1k+=1while(j<len(r)):a[k]=r[j]j+=1k+=1returnsn=int(input())a=[int(i)foriininput().split()]print(merge_sort(a))