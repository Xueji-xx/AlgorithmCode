#include <iostream>#include <string>using namespace std;string decompose(int n) {    switch (n) {        case 0:            return "0";        case 1:            return "2(0)";        case 2:            return "2";        case 3:            return "2+2(0)";        default:            string result;            int k = 0;            while ((1 << k) <= n) {                k++;            }            k--;            if ((1 << k) == n) {                result = "2(" + decompose(k) + ")";            } else {                result = "2(" + decompose(k) + ")+" + decompose(n - (1 << k));            }            return result;    }}int main() {    int n;    cin >> n;    cout << decompose(n) << endl;    return 0;}#include<iostream>#include<string>usingnamespacestd;stringdecompose(intn){switch(n){case0:return"0";case1:return"2(0)";case2:return"2";case3:return"2+2(0)";default:stringresult;intk=0;while((1<<k)<=n){k++;}k--;if((1<<k)==n){result="2("+decompose(k)+")";}else{result="2("+decompose(k)+")+"+decompose(n-(1<<k));}returnresult;}}intmain(){intn;cin>>n;cout<<decompose(n)<<endl;return0;}#include<iostream>#include<string>usingnamespacestd;stringdecompose(intn){switch(n){case0:return"0";case1:return"2(0)";case2:return"2";case3:return"2+2(0)";default:stringresult;intk=0;while((1<<k)<=n){k++;}k--;if((1<<k)==n){result="2("+decompose(k)+")";}else{result="2("+decompose(k)+")+"+decompose(n-(1<<k));}returnresult;}}intmain(){intn;cin>>n;cout<<decompose(n)<<endl;return0;}#include<iostream>#include<string>usingnamespacestd;stringdecompose(intn){switch(n){case0:return"0";case1:return"2(0)";case2:return"2";case3:return"2+2(0)";default:stringresult;intk=0;while((1<<k)<=n){k++;}k--;if((1<<k)==n){result="2("+decompose(k)+")";}else{result="2("+decompose(k)+")+"+decompose(n-(1<<k));}returnresult;}}intmain(){intn;cin>>n;cout<<decompose(n)<<endl;return0;}