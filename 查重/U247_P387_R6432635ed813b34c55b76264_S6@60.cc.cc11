#include <stdio.h>#include <stdlib.h>#include <string.h>char* read(){    char *s = (char*)malloc(sizeof(char)*10000); // 分配动态内存    s[0] = '\0'; // 初始化字符串为“空字符串”    char s1[10000];    char c;    int n;    while ((c = getchar()) != EOF) // 一直读入字符，直到输入结束符 EOF    {        if (c == '[')        {            scanf("%d", &n); // 读入 D            strcpy(s1, read()); // 读入 X            while (n--) strcat(s, s1); // 重复 D 次 X        }        else        {            if (c == ']') break;            else strncat(s, &c, 1);        }    }    return s;}int main(){    char* result = read();    printf("%s", result); // 输出解压缩后的字符串    free(result); // 释放动态内存    return 0;}#include<stdio.h>#include<stdlib.h>#include<string.h>char*read(){char*s=(char*)malloc(sizeof(char)*10000);//分配动态内存s[0]='\0';//初始化字符串为“空字符串”chars1[10000];charc;intn;while((c=getchar())!=EOF)//一直读入字符，直到输入结束符EOF{if(c=='['){scanf("%d",&n);//读入Dstrcpy(s1,read());//读入Xwhile(n--)strcat(s,s1);//重复D次X}else{if(c==']')break;elsestrncat(s,&c,1);}}returns;}intmain(){char*result=read();printf("%s",result);//输出解压缩后的字符串free(result);//释放动态内存return0;}#include<stdio.h>#include<stdlib.h>#include<string.h>char*read(){char*s=(char*)malloc(sizeof(char)*10000);//分配动态内存s[0]='\0';//初始化字符串为“空字符串”chars1[10000];charc;intn;while((c=getchar())!=EOF)//一直读入字符，直到输入结束符EOF{if(c=='['){scanf("%d",&n);//读入Dstrcpy(s1,read());//读入Xwhile(n--)strcat(s,s1);//重复D次X}else{if(c==']')break;elsestrncat(s,&c,1);}}returns;}intmain(){char*result=read();printf("%s",result);//输出解压缩后的字符串free(result);//释放动态内存return0;}#include<stdio.h>#include<stdlib.h>#include<string.h>char*read(){char*s=(char*)malloc(sizeof(char)*10000);//分配动态内存s[0]='\0';//初始化字符串为“空字符串”chars1[10000];charc;intn;while((c=getchar())!=EOF)//一直读入字符，直到输入结束符EOF{if(c=='['){scanf("%d",&n);//读入Dstrcpy(s1,read());//读入Xwhile(n--)strcat(s,s1);//重复D次X}else{if(c==']')break;elsestrncat(s,&c,1);}}returns;}intmain(){char*result=read();printf("%s",result);//输出解压缩后的字符串free(result);//释放动态内存return0;}