n, c = input().split()n = int(n)# 计算金字塔的高度height = 0while n >= (height + 1) ** 2:    height += 1# 输出金字塔left_space = height - 1for i in range(height):    line = ' ' * left_space + c * (2 * i + 1) + ' ' * left_space    print(line)    left_space -= 1# 输出剩余砖块数量used_bricks = height ** 2remaining_bricks = n - used_bricksprint(remaining_bricks)n,c=input().split()n=int(n)#计算金字塔的高度height=0whilen>=(height+1)**2:height+=1#输出金字塔left_space=height-1foriinrange(height):line=''*left_space+c*(2*i+1)+''*left_spaceprint(line)left_space-=1#输出剩余砖块数量used_bricks=height**2remaining_bricks=n-used_bricksprint(remaining_bricks)n,c=input().split()n=int(n)#计算金字塔的高度height=0whilen>=(height+1)**2:height+=1#输出金字塔left_space=height-1foriinrange(height):line=''*left_space+c*(2*i+1)+''*left_spaceprint(line)left_space-=1#输出剩余砖块数量used_bricks=height**2remaining_bricks=n-used_bricksprint(remaining_bricks)n,c=input().split()n=int(n)#计算金字塔的高度height=0whilen>=(height+1)**2:height+=1#输出金字塔left_space=height-1foriinrange(height):line=''*left_space+c*(2*i+1)+''*left_spaceprint(line)left_space-=1#输出剩余砖块数量used_bricks=height**2remaining_bricks=n-used_bricksprint(remaining_bricks)