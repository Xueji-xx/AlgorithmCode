#include<iostream>using namespace std;void dfs(int n){    if(n==0)    {        cout<<"0";        return;    }    if(n==1)    {        cout<<"2(0)";        return;    }    if(n==2)    {        cout<<"2";        return;    }    int k=0;    while((1<<(k+1))<=n)  // 找到最大的2的幂次方小于等于n的数    {        k++;    }    if((1<<k)==n)  // n刚好是2的幂次方    {        cout<<"2(";        dfs(k);        cout<<")";    }    else    {        cout<<"2(";        dfs(k);        cout<<")+";        dfs(n-(1<<k));    }}int main(){    int n;    cin>>n;    dfs(n);    return 0;}#include<iostream>usingnamespacestd;voiddfs(intn){if(n==0){cout<<"0";return;}if(n==1){cout<<"2(0)";return;}if(n==2){cout<<"2";return;}intk=0;while((1<<(k+1))<=n)//找到最大的2的幂次方小于等于n的数{k++;}if((1<<k)==n)//n刚好是2的幂次方{cout<<"2(";dfs(k);cout<<")";}else{cout<<"2(";dfs(k);cout<<")+";dfs(n-(1<<k));}}intmain(){intn;cin>>n;dfs(n);return0;}#include<iostream>usingnamespacestd;voiddfs(intn){if(n==0){cout<<"0";return;}if(n==1){cout<<"2(0)";return;}if(n==2){cout<<"2";return;}intk=0;while((1<<(k+1))<=n)//找到最大的2的幂次方小于等于n的数{k++;}if((1<<k)==n)//n刚好是2的幂次方{cout<<"2(";dfs(k);cout<<")";}else{cout<<"2(";dfs(k);cout<<")+";dfs(n-(1<<k));}}intmain(){intn;cin>>n;dfs(n);return0;}#include<iostream>usingnamespacestd;voiddfs(intn){if(n==0){cout<<"0";return;}if(n==1){cout<<"2(0)";return;}if(n==2){cout<<"2";return;}intk=0;while((1<<(k+1))<=n)//找到最大的2的幂次方小于等于n的数{k++;}if((1<<k)==n)//n刚好是2的幂次方{cout<<"2(";dfs(k);cout<<")";}else{cout<<"2(";dfs(k);cout<<")+";dfs(n-(1<<k));}}intmain(){intn;cin>>n;dfs(n);return0;}