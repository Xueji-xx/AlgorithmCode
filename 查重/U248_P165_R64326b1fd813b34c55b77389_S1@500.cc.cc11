#include <iostream>#include <vector>using namespace std;int jump_out_of_well(int n, vector<int>& memo) {    if (n == 1 || n == 0) {        return 1;    } else if (memo[n] != -1) {        return memo[n];    } else {        memo[n] = jump_out_of_well(n-2, memo) + jump_out_of_well(n-3, memo);        return memo[n];    }}int main() {    int n;    cin >> n;    vector<int> memo(n+1, -1);    cout << jump_out_of_well(n, memo) << endl;    return 0;}#include<iostream>#include<vector>usingnamespacestd;intjump_out_of_well(intn,vector<int>&memo){if(n==1||n==0){return1;}elseif(memo[n]!=-1){returnmemo[n];}else{memo[n]=jump_out_of_well(n-2,memo)+jump_out_of_well(n-3,memo);returnmemo[n];}}intmain(){intn;cin>>n;vector<int>memo(n+1,-1);cout<<jump_out_of_well(n,memo)<<endl;return0;}#include<iostream>#include<vector>usingnamespacestd;intjump_out_of_well(intn,vector<int>&memo){if(n==1||n==0){return1;}elseif(memo[n]!=-1){returnmemo[n];}else{memo[n]=jump_out_of_well(n-2,memo)+jump_out_of_well(n-3,memo);returnmemo[n];}}intmain(){intn;cin>>n;vector<int>memo(n+1,-1);cout<<jump_out_of_well(n,memo)<<endl;return0;}#include<iostream>#include<vector>usingnamespacestd;intjump_out_of_well(intn,vector<int>&memo){if(n==1||n==0){return1;}elseif(memo[n]!=-1){returnmemo[n];}else{memo[n]=jump_out_of_well(n-2,memo)+jump_out_of_well(n-3,memo);returnmemo[n];}}intmain(){intn;cin>>n;vector<int>memo(n+1,-1);cout<<jump_out_of_well(n,memo)<<endl;return0;}