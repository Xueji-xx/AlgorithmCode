#include <iostream>#include <string>using namespace std;void decompress(const string &str, size_t start, size_t end, int level) {    if (level > 10) {        exit(1);    }    for (size_t i = start; i < end; i++) {        if (str[i] == '[') {            int repeat = 0;            size_t j = i + 1;            while (str[j] >= '0' && str[j] <= '9') {                repeat = repeat * 10 + str[j] - '0';                j++;            }            size_t new_start = j;            size_t new_end = new_start;            int count = 1;            while (count > 0) {                new_end++;                if (str[new_end] == '[') count++;                if (str[new_end] == ']') count--;            }            for (int k = 0; k < repeat; k++) {                decompress(str, new_start, new_end, level + 1);            }            i = new_end;        } else {            cout << str[i];        }    }}int main() {    string str;    cin >> str;    if (str.length() > 20000) {        return 1;    }    for (char c : str) {        if (!isalnum(c) && c != '[' && c != ']') {            return 1;        }    }    decompress(str, 0, str.length(), 0);    return 0;}#include<iostream>#include<string>usingnamespacestd;voiddecompress(conststring&str,size_tstart,size_tend,intlevel){if(level>10){exit(1);}for(size_ti=start;i<end;i++){if(str[i]=='['){intrepeat=0;size_tj=i+1;while(str[j]>='0'&&str[j]<='9'){repeat=repeat*10+str[j]-'0';j++;}size_tnew_start=j;size_tnew_end=new_start;intcount=1;while(count>0){new_end++;if(str[new_end]=='[')count++;if(str[new_end]==']')count--;}for(intk=0;k<repeat;k++){decompress(str,new_start,new_end,level+1);}i=new_end;}else{cout<<str[i];}}}intmain(){stringstr;cin>>str;if(str.length()>20000){return1;}for(charc:str){if(!isalnum(c)&&c!='['&&c!=']'){return1;}}decompress(str,0,str.length(),0);return0;}#include<iostream>#include<string>usingnamespacestd;voiddecompress(conststring&str,size_tstart,size_tend,intlevel){if(level>10){exit(1);}for(size_ti=start;i<end;i++){if(str[i]=='['){intrepeat=0;size_tj=i+1;while(str[j]>='0'&&str[j]<='9'){repeat=repeat*10+str[j]-'0';j++;}size_tnew_start=j;size_tnew_end=new_start;intcount=1;while(count>0){new_end++;if(str[new_end]=='[')count++;if(str[new_end]==']')count--;}for(intk=0;k<repeat;k++){decompress(str,new_start,new_end,level+1);}i=new_end;}else{cout<<str[i];}}}intmain(){stringstr;cin>>str;if(str.length()>20000){return1;}for(charc:str){if(!isalnum(c)&&c!='['&&c!=']'){return1;}}decompress(str,0,str.length(),0);return0;}#include<iostream>#include<string>usingnamespacestd;voiddecompress(conststring&str,size_tstart,size_tend,intlevel){if(level>10){exit(1);}for(size_ti=start;i<end;i++){if(str[i]=='['){intrepeat=0;size_tj=i+1;while(str[j]>='0'&&str[j]<='9'){repeat=repeat*10+str[j]-'0';j++;}size_tnew_start=j;size_tnew_end=new_start;intcount=1;while(count>0){new_end++;if(str[new_end]=='[')count++;if(str[new_end]==']')count--;}for(intk=0;k<repeat;k++){decompress(str,new_start,new_end,level+1);}i=new_end;}else{cout<<str[i];}}}intmain(){stringstr;cin>>str;if(str.length()>20000){return1;}for(charc:str){if(!isalnum(c)&&c!='['&&c!=']'){return1;}}decompress(str,0,str.length(),0);return0;}