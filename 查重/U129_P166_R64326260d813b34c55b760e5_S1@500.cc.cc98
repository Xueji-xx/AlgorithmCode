#include <stdio.h>#define N  1000int n;char c;int a[N];int r = 0;int k = 0;void dfs(int m){	if (m == k)		{		return;	}		int count = 2 * (m + 1) - 1;	int b = k - m - 1;	n = n-count;		while (b --)		{		printf(" ");	}	while (count --)		{		printf("%c", c);	}	puts("");		dfs(m + 1);}void solve(){	for (int i = 1; r + i <= n; i += 2)	{		r += i;		a[k ++] = r;	}		dfs(0);		printf("%d\n", n);}int main(void){	scanf("%d %c", &n, &c);		solve();			return 0;}#include<stdio.h>#defineN1000intn;charc;inta[N];intr=0;intk=0;voiddfs(intm){	if(m==k)		{		return;	}		intcount=2*(m+1)-1;	intb=k-m-1;	n=n-count;		while(b--)		{		printf("");	}	while(count--)		{		printf("%c",c);	}	puts("");		dfs(m+1);}voidsolve(){	for(inti=1;r+i<=n;i+=2)	{		r+=i;		a[k++]=r;	}		dfs(0);		printf("%d\n",n);}intmain(void){	scanf("%d%c",&n,&c);		solve();			return0;}#include<stdio.h>#defineN1000intn;charc;inta[N];intr=0;intk=0;voiddfs(intm){if(m==k){return;}intcount=2*(m+1)-1;intb=k-m-1;n=n-count;while(b--){printf("");}while(count--){printf("%c",c);}puts("");dfs(m+1);}voidsolve(){for(inti=1;r+i<=n;i+=2){r+=i;a[k++]=r;}dfs(0);printf("%d\n",n);}intmain(void){scanf("%d%c",&n,&c);solve();return0;}#include<stdio.h>#defineN1000intn;charc;inta[N];intr=0;intk=0;voiddfs(intm){if(m==k){return;}intcount=2*(m+1)-1;intb=k-m-1;n=n-count;while(b--){printf("");}while(count--){printf("%c",c);}puts("");dfs(m+1);}voidsolve(){for(inti=1;r+i<=n;i+=2){r+=i;a[k++]=r;}dfs(0);printf("%d\n",n);}intmain(void){scanf("%d%c",&n,&c);solve();return0;}