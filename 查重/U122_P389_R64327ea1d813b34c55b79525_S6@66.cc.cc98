#include <stdio.h>#define N 100000int n;int a[N];int t[N];long long ctl;void Merge(int s1,int e1,int s2,int e2){    int k=s1;    int p1 = s1;    int p2 = s2;    while (p1<=e1&&p2<=e2)    {        if (a[p1]<=a[p2])        {            t[k++] = a[p1++];        }        else        {            t[k++] = a[p2++];            ctl+=e1-p1+1;        }    }    while (p1<=e1)        t[k++] = a[p1++];    while (p2<=e2)        t[k++] = a[p2++];    k--;    while (k>=s1)    {        a[k] = t[k];        k--;    }}void Merge_sort(int s,int e){    int mid;    if (s<e)    {        mid = (s+e)/2;        Merge_sort(s,mid);        Merge_sort(mid+1,e);        Merge(s,mid,mid+1,e);    }}int main(){    ctl = 0;    scanf ("%d",&n);    for(int i=0; i<n; i++)        scanf ("%d",&a[i]);    Merge_sort(0,n-1);    printf ("%lld\n",ctl);    return 0;}#include<stdio.h>#defineN100000intn;inta[N];intt[N];longlongctl;voidMerge(ints1,inte1,ints2,inte2){intk=s1;intp1=s1;intp2=s2;while(p1<=e1&&p2<=e2){if(a[p1]<=a[p2]){t[k++]=a[p1++];}else{t[k++]=a[p2++];ctl+=e1-p1+1;}}while(p1<=e1)t[k++]=a[p1++];while(p2<=e2)t[k++]=a[p2++];k--;while(k>=s1){a[k]=t[k];k--;}}voidMerge_sort(ints,inte){intmid;if(s<e){mid=(s+e)/2;Merge_sort(s,mid);Merge_sort(mid+1,e);Merge(s,mid,mid+1,e);}}intmain(){ctl=0;scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&a[i]);Merge_sort(0,n-1);printf("%lld\n",ctl);return0;}#include<stdio.h>#defineN100000intn;inta[N];intt[N];longlongctl;voidMerge(ints1,inte1,ints2,inte2){intk=s1;intp1=s1;intp2=s2;while(p1<=e1&&p2<=e2){if(a[p1]<=a[p2]){t[k++]=a[p1++];}else{t[k++]=a[p2++];ctl+=e1-p1+1;}}while(p1<=e1)t[k++]=a[p1++];while(p2<=e2)t[k++]=a[p2++];k--;while(k>=s1){a[k]=t[k];k--;}}voidMerge_sort(ints,inte){intmid;if(s<e){mid=(s+e)/2;Merge_sort(s,mid);Merge_sort(mid+1,e);Merge(s,mid,mid+1,e);}}intmain(){ctl=0;scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&a[i]);Merge_sort(0,n-1);printf("%lld\n",ctl);return0;}#include<stdio.h>#defineN100000intn;inta[N];intt[N];longlongctl;voidMerge(ints1,inte1,ints2,inte2){intk=s1;intp1=s1;intp2=s2;while(p1<=e1&&p2<=e2){if(a[p1]<=a[p2]){t[k++]=a[p1++];}else{t[k++]=a[p2++];ctl+=e1-p1+1;}}while(p1<=e1)t[k++]=a[p1++];while(p2<=e2)t[k++]=a[p2++];k--;while(k>=s1){a[k]=t[k];k--;}}voidMerge_sort(ints,inte){intmid;if(s<e){mid=(s+e)/2;Merge_sort(s,mid);Merge_sort(mid+1,e);Merge(s,mid,mid+1,e);}}intmain(){ctl=0;scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&a[i]);Merge_sort(0,n-1);printf("%lld\n",ctl);return0;}