#include<stdio.h>char c;	//砖块样子int row;	//打印时的行数int surplus;	//剩余砖块 int arr[31];	//存储每行砖块数量 void init();void print();int main(){	int num;	//砖块数量 	scanf("%d %c", &num, &c);	for (row = 0; ; row++)	{		for (surplus = 0; surplus < 1+2*row; surplus++)		{			if (row*row+surplus == num)	//递增函数求和a+a(a-1)=a*a			{				//printf("%d %d", row, surplus);				init();				return 0;			}		}	}} void init(){	int i;		for (i = 0; i < row; i++)	{		arr[i] = 2*i+1;		//printf("%d ", arr[i]);	} 		print();}void print(){	int i, j, blank;	for (i = 0; i < row; i++)	{		blank = (arr[row-1]-arr[i]) / 2;	//需要输出的空格 		while (blank--)		{			printf(" ");		}		while(arr[i]--)		{			printf("%c", c);		}		printf("\n");	} 	printf("%d", surplus);}#include<stdio.h>charc;	//砖块样子introw;	//打印时的行数intsurplus;	//剩余砖块intarr[31];	//存储每行砖块数量voidinit();voidprint();intmain(){	intnum;	//砖块数量	scanf("%d%c",&num,&c);	for(row=0;;row++)	{		for(surplus=0;surplus<1+2*row;surplus++)		{			if(row*row+surplus==num)	//递增函数求和a+a(a-1)=a*a			{				//printf("%d%d",row,surplus);				init();				return0;			}		}	}}voidinit(){	inti;		for(i=0;i<row;i++)	{		arr[i]=2*i+1;		//printf("%d",arr[i]);	}		print();}voidprint(){	inti,j,blank;	for(i=0;i<row;i++)	{		blank=(arr[row-1]-arr[i])/2;	//需要输出的空格		while(blank--)		{			printf("");		}		while(arr[i]--)		{			printf("%c",c);		}		printf("\n");	}	printf("%d",surplus);}#include<stdio.h>charc;//砖块样子introw;//打印时的行数intsurplus;//剩余砖块intarr[31];//存储每行砖块数量voidinit();voidprint();intmain(){intnum;//砖块数量scanf("%d%c",&num,&c);for(row=0;;row++){for(surplus=0;surplus<1+2*row;surplus++){if(row*row+surplus==num)//递增函数求和a+a(a-1)=a*a{//printf("%d%d",row,surplus);init();return0;}}}}voidinit(){inti;for(i=0;i<row;i++){arr[i]=2*i+1;//printf("%d",arr[i]);}print();}voidprint(){inti,j,blank;for(i=0;i<row;i++){blank=(arr[row-1]-arr[i])/2;//需要输出的空格while(blank--){printf("");}while(arr[i]--){printf("%c",c);}printf("\n");}printf("%d",surplus);}#include<stdio.h>charc;//砖块样子introw;//打印时的行数intsurplus;//剩余砖块intarr[31];//存储每行砖块数量voidinit();voidprint();intmain(){intnum;//砖块数量scanf("%d%c",&num,&c);for(row=0;;row++){for(surplus=0;surplus<1+2*row;surplus++){if(row*row+surplus==num)//递增函数求和a+a(a-1)=a*a{//printf("%d%d",row,surplus);init();return0;}}}}voidinit(){inti;for(i=0;i<row;i++){arr[i]=2*i+1;//printf("%d",arr[i]);}print();}voidprint(){inti,j,blank;for(i=0;i<row;i++){blank=(arr[row-1]-arr[i])/2;//需要输出的空格while(blank--){printf("");}while(arr[i]--){printf("%c",c);}printf("\n");}printf("%d",surplus);}