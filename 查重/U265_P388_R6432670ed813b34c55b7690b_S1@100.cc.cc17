#include <iostream>#include <string>#include <algorithm>using namespace std;string decimalToBinary(int decimal) {  string binary = "";  while (decimal > 0) {    binary = to_string(decimal % 2) + binary;    decimal /= 2;  }  return binary;}string powersOfTwo(string binary) {  string result = "";  for (int i = 0; i < binary.length(); i++) {    if (binary[i] == '1') {      int power = binary.length() - i - 1;      string term = power == 0 ? "2(0)" : power == 1 ? "2" : "2(" + powersOfTwo(decimalToBinary(power)) + ")";      result += term + "+";    }  }  return result.substr(0, result.length() - 1);}int main() {  int n;  cin >> n;  cout << powersOfTwo(decimalToBinary(n)) << endl;  return 0;}#include<iostream>#include<string>#include<algorithm>usingnamespacestd;stringdecimalToBinary(intdecimal){stringbinary="";while(decimal>0){binary=to_string(decimal%2)+binary;decimal/=2;}returnbinary;}stringpowersOfTwo(stringbinary){stringresult="";for(inti=0;i<binary.length();i++){if(binary[i]=='1'){intpower=binary.length()-i-1;stringterm=power==0?"2(0)":power==1?"2":"2("+powersOfTwo(decimalToBinary(power))+")";result+=term+"+";}}returnresult.substr(0,result.length()-1);}intmain(){intn;cin>>n;cout<<powersOfTwo(decimalToBinary(n))<<endl;return0;}#include<iostream>#include<string>#include<algorithm>usingnamespacestd;stringdecimalToBinary(intdecimal){stringbinary="";while(decimal>0){binary=to_string(decimal%2)+binary;decimal/=2;}returnbinary;}stringpowersOfTwo(stringbinary){stringresult="";for(inti=0;i<binary.length();i++){if(binary[i]=='1'){intpower=binary.length()-i-1;stringterm=power==0?"2(0)":power==1?"2":"2("+powersOfTwo(decimalToBinary(power))+")";result+=term+"+";}}returnresult.substr(0,result.length()-1);}intmain(){intn;cin>>n;cout<<powersOfTwo(decimalToBinary(n))<<endl;return0;}#include<iostream>#include<string>#include<algorithm>usingnamespacestd;stringdecimalToBinary(intdecimal){stringbinary="";while(decimal>0){binary=to_string(decimal%2)+binary;decimal/=2;}returnbinary;}stringpowersOfTwo(stringbinary){stringresult="";for(inti=0;i<binary.length();i++){if(binary[i]=='1'){intpower=binary.length()-i-1;stringterm=power==0?"2(0)":power==1?"2":"2("+powersOfTwo(decimalToBinary(power))+")";result+=term+"+";}}returnresult.substr(0,result.length()-1);}intmain(){intn;cin>>n;cout<<powersOfTwo(decimalToBinary(n))<<endl;return0;}