def merge_sort(arr):    n = len(arr)    merged = [0] * n    inv = 0    step = 1    while step < n:        for i in range(0, n, 2 * step):            left = i            mid = min(i + step, n)            right = min(i + 2 * step, n)            j, k = left, mid            idx = left            while j < mid and k < right:                if arr[j] <= arr[k]:                    merged[idx] = arr[j]                    j += 1                else:                    merged[idx] = arr[k]                    k += 1                    inv += mid - j                idx += 1            while j < mid:                merged[idx] = arr[j]                j += 1                idx += 1            while k < right:                merged[idx] = arr[k]                k += 1                idx += 1            arr[left:right] = merged[left:right]        step *= 2    return invn = int(input())arr = list(map(int, input().split()))inv = merge_sort(arr)print(inv)defmerge_sort(arr):n=len(arr)merged=[0]*ninv=0step=1whilestep<n:foriinrange(0,n,2*step):left=imid=min(i+step,n)right=min(i+2*step,n)j,k=left,mididx=leftwhilej<midandk<right:ifarr[j]<=arr[k]:merged[idx]=arr[j]j+=1else:merged[idx]=arr[k]k+=1inv+=mid-jidx+=1whilej<mid:merged[idx]=arr[j]j+=1idx+=1whilek<right:merged[idx]=arr[k]k+=1idx+=1arr[left:right]=merged[left:right]step*=2returninvn=int(input())arr=list(map(int,input().split()))inv=merge_sort(arr)print(inv)defmerge_sort(arr):n=len(arr)merged=[0]*ninv=0step=1whilestep<n:foriinrange(0,n,2*step):left=imid=min(i+step,n)right=min(i+2*step,n)j,k=left,mididx=leftwhilej<midandk<right:ifarr[j]<=arr[k]:merged[idx]=arr[j]j+=1else:merged[idx]=arr[k]k+=1inv+=mid-jidx+=1whilej<mid:merged[idx]=arr[j]j+=1idx+=1whilek<right:merged[idx]=arr[k]k+=1idx+=1arr[left:right]=merged[left:right]step*=2returninvn=int(input())arr=list(map(int,input().split()))inv=merge_sort(arr)print(inv)defmerge_sort(arr):n=len(arr)merged=[0]*ninv=0step=1whilestep<n:foriinrange(0,n,2*step):left=imid=min(i+step,n)right=min(i+2*step,n)j,k=left,mididx=leftwhilej<midandk<right:ifarr[j]<=arr[k]:merged[idx]=arr[j]j+=1else:merged[idx]=arr[k]k+=1inv+=mid-jidx+=1whilej<mid:merged[idx]=arr[j]j+=1idx+=1whilek<right:merged[idx]=arr[k]k+=1idx+=1arr[left:right]=merged[left:right]step*=2returninvn=int(input())arr=list(map(int,input().split()))inv=merge_sort(arr)print(inv)