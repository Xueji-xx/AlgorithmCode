#include<cstdio>using namespace std;const int N=1e6+10;int q[N],tmp[N];long long merge_sort (int a[],int l,int r) {     if (l == r) return 0;    int mid = l + r >> 1;    long long ans = merge_sort (a,l,mid) + merge_sort (a,mid + 1,r);    int i = l,j = mid + 1,k = 1;    while (i <= mid && j <= r) {        if (a[i] <= a[j]) tmp[k++] = a[i++];        else tmp[k++] = a[j++],ans += mid - i + 1;    }    while (i <= mid) tmp[k++] = a[i++];    while (j <= r) tmp[k++] = a[j++];    for (int i = 1,j = l;j <= r;i++,j++) a[j] = tmp[i];    return ans;}int main(){    int n;    scanf("%d",&n);    for(int i=0;i<n;i++)  scanf("%d",&q[i]);    long long an=merge_sort(q,0,n-1);    printf("%ld",an);    }#include<cstdio>usingnamespacestd;constintN=1e6+10;intq[N],tmp[N];longlongmerge_sort(inta[],intl,intr){if(l==r)return0;intmid=l+r>>1;longlongans=merge_sort(a,l,mid)+merge_sort(a,mid+1,r);inti=l,j=mid+1,k=1;while(i<=mid&&j<=r){if(a[i]<=a[j])tmp[k++]=a[i++];elsetmp[k++]=a[j++],ans+=mid-i+1;}while(i<=mid)tmp[k++]=a[i++];while(j<=r)tmp[k++]=a[j++];for(inti=1,j=l;j<=r;i++,j++)a[j]=tmp[i];returnans;}intmain(){intn;scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&q[i]);longlongan=merge_sort(q,0,n-1);printf("%ld",an);}#include<cstdio>usingnamespacestd;constintN=1e6+10;intq[N],tmp[N];longlongmerge_sort(inta[],intl,intr){if(l==r)return0;intmid=l+r>>1;longlongans=merge_sort(a,l,mid)+merge_sort(a,mid+1,r);inti=l,j=mid+1,k=1;while(i<=mid&&j<=r){if(a[i]<=a[j])tmp[k++]=a[i++];elsetmp[k++]=a[j++],ans+=mid-i+1;}while(i<=mid)tmp[k++]=a[i++];while(j<=r)tmp[k++]=a[j++];for(inti=1,j=l;j<=r;i++,j++)a[j]=tmp[i];returnans;}intmain(){intn;scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&q[i]);longlongan=merge_sort(q,0,n-1);printf("%ld",an);}#include<cstdio>usingnamespacestd;constintN=1e6+10;intq[N],tmp[N];longlongmerge_sort(inta[],intl,intr){if(l==r)return0;intmid=l+r>>1;longlongans=merge_sort(a,l,mid)+merge_sort(a,mid+1,r);inti=l,j=mid+1,k=1;while(i<=mid&&j<=r){if(a[i]<=a[j])tmp[k++]=a[i++];elsetmp[k++]=a[j++],ans+=mid-i+1;}while(i<=mid)tmp[k++]=a[i++];while(j<=r)tmp[k++]=a[j++];for(inti=1,j=l;j<=r;i++,j++)a[j]=tmp[i];returnans;}intmain(){intn;scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&q[i]);longlongan=merge_sort(q,0,n-1);printf("%ld",an);}