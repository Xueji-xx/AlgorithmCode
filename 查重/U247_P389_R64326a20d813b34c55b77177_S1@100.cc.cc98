#include <stdio.h>#include <stdlib.h>#define MAXN 500005int n, a[MAXN];long long ans = 0;void merge(int left, int middle, int right){    int i = left, j = middle + 1, k = left;    int tmp[right + 1];    while (i <= middle && j <= right) {        if (a[i] <= a[j]) {            tmp[k++] = a[i++];        } else {            ans += middle - i + 1;            tmp[k++] = a[j++];        }    }    while (i <= middle) {        tmp[k++] = a[i++];    }    while (j <= right) {        tmp[k++] = a[j++];    }    for (int i = left; i <= right; ++i, ++k) {        a[i] = tmp[i];    }}void merge_sort(int left, int right){    if (left >= right) {        return;    }    int middle = (left + right) >> 1;    merge_sort(left, middle);    merge_sort(middle + 1, right);    merge(left, middle, right);}int main(){    scanf("%d", &n);    for (int i = 1; i <= n; i++) {        scanf("%d", &a[i]);    }    merge_sort(1, n);    printf("%lld", ans);    return 0;}#include<stdio.h>#include<stdlib.h>#defineMAXN500005intn,a[MAXN];longlongans=0;voidmerge(intleft,intmiddle,intright){inti=left,j=middle+1,k=left;inttmp[right+1];while(i<=middle&&j<=right){if(a[i]<=a[j]){tmp[k++]=a[i++];}else{ans+=middle-i+1;tmp[k++]=a[j++];}}while(i<=middle){tmp[k++]=a[i++];}while(j<=right){tmp[k++]=a[j++];}for(inti=left;i<=right;++i,++k){a[i]=tmp[i];}}voidmerge_sort(intleft,intright){if(left>=right){return;}intmiddle=(left+right)>>1;merge_sort(left,middle);merge_sort(middle+1,right);merge(left,middle,right);}intmain(){scanf("%d",&n);for(inti=1;i<=n;i++){scanf("%d",&a[i]);}merge_sort(1,n);printf("%lld",ans);return0;}#include<stdio.h>#include<stdlib.h>#defineMAXN500005intn,a[MAXN];longlongans=0;voidmerge(intleft,intmiddle,intright){inti=left,j=middle+1,k=left;inttmp[right+1];while(i<=middle&&j<=right){if(a[i]<=a[j]){tmp[k++]=a[i++];}else{ans+=middle-i+1;tmp[k++]=a[j++];}}while(i<=middle){tmp[k++]=a[i++];}while(j<=right){tmp[k++]=a[j++];}for(inti=left;i<=right;++i,++k){a[i]=tmp[i];}}voidmerge_sort(intleft,intright){if(left>=right){return;}intmiddle=(left+right)>>1;merge_sort(left,middle);merge_sort(middle+1,right);merge(left,middle,right);}intmain(){scanf("%d",&n);for(inti=1;i<=n;i++){scanf("%d",&a[i]);}merge_sort(1,n);printf("%lld",ans);return0;}#include<stdio.h>#include<stdlib.h>#defineMAXN500005intn,a[MAXN];longlongans=0;voidmerge(intleft,intmiddle,intright){inti=left,j=middle+1,k=left;inttmp[right+1];while(i<=middle&&j<=right){if(a[i]<=a[j]){tmp[k++]=a[i++];}else{ans+=middle-i+1;tmp[k++]=a[j++];}}while(i<=middle){tmp[k++]=a[i++];}while(j<=right){tmp[k++]=a[j++];}for(inti=left;i<=right;++i,++k){a[i]=tmp[i];}}voidmerge_sort(intleft,intright){if(left>=right){return;}intmiddle=(left+right)>>1;merge_sort(left,middle);merge_sort(middle+1,right);merge(left,middle,right);}intmain(){scanf("%d",&n);for(inti=1;i<=n;i++){scanf("%d",&a[i]);}merge_sort(1,n);printf("%lld",ans);return0;}