#include <stdio.h>int a[600001]={0};long long int all = 0;int MergeSort(int s[], int l, int m, int r){	int i = l, j = m, b[r-l+1]={0}, idx = 0, sum = 0, t = 0;	while (i < m && j <= r){		if(s[i] > s[j]){			b[idx++] = s[j++];			t++;		}		if(s[i] <= s[j] || j == r+1){			sum += t * (m - i);			b[idx++] = s[i++];			t = 0;		}	}	while(i < m) b[idx++] = s[i++];	while(j <= r) b[idx++] = s[j++];	idx = 0;	for(int k=l; k<=r; k++) s[k] = b[idx++];	return sum;}void Merge(int s[], int low, int high){	if (low < high){		int mid = (low + high) / 2;		Merge(s, low, mid);		Merge(s, mid+1, high);		all += MergeSort(s, low, mid+1, high);	}}int main(){	int n;	scanf("%d", &n);	for(int i=0; i<n; i++) scanf("%d", &a[i]);	Merge(a, 0, n-1);	printf("%lld", all);	return 0;}#include<stdio.h>inta[600001]={0};longlongintall=0;intMergeSort(ints[],intl,intm,intr){	inti=l,j=m,b[r-l+1]={0},idx=0,sum=0,t=0;	while(i<m&&j<=r){		if(s[i]>s[j]){			b[idx++]=s[j++];			t++;		}		if(s[i]<=s[j]||j==r+1){			sum+=t*(m-i);			b[idx++]=s[i++];			t=0;		}	}	while(i<m)b[idx++]=s[i++];	while(j<=r)b[idx++]=s[j++];	idx=0;	for(intk=l;k<=r;k++)s[k]=b[idx++];	returnsum;}voidMerge(ints[],intlow,inthigh){	if(low<high){		intmid=(low+high)/2;		Merge(s,low,mid);		Merge(s,mid+1,high);		all+=MergeSort(s,low,mid+1,high);	}}intmain(){	intn;	scanf("%d",&n);	for(inti=0;i<n;i++)scanf("%d",&a[i]);	Merge(a,0,n-1);	printf("%lld",all);	return0;}#include<stdio.h>inta[600001]={0};longlongintall=0;intMergeSort(ints[],intl,intm,intr){inti=l,j=m,b[r-l+1]={0},idx=0,sum=0,t=0;while(i<m&&j<=r){if(s[i]>s[j]){b[idx++]=s[j++];t++;}if(s[i]<=s[j]||j==r+1){sum+=t*(m-i);b[idx++]=s[i++];t=0;}}while(i<m)b[idx++]=s[i++];while(j<=r)b[idx++]=s[j++];idx=0;for(intk=l;k<=r;k++)s[k]=b[idx++];returnsum;}voidMerge(ints[],intlow,inthigh){if(low<high){intmid=(low+high)/2;Merge(s,low,mid);Merge(s,mid+1,high);all+=MergeSort(s,low,mid+1,high);}}intmain(){intn;scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&a[i]);Merge(a,0,n-1);printf("%lld",all);return0;}#include<stdio.h>inta[600001]={0};longlongintall=0;intMergeSort(ints[],intl,intm,intr){inti=l,j=m,b[r-l+1]={0},idx=0,sum=0,t=0;while(i<m&&j<=r){if(s[i]>s[j]){b[idx++]=s[j++];t++;}if(s[i]<=s[j]||j==r+1){sum+=t*(m-i);b[idx++]=s[i++];t=0;}}while(i<m)b[idx++]=s[i++];while(j<=r)b[idx++]=s[j++];idx=0;for(intk=l;k<=r;k++)s[k]=b[idx++];returnsum;}voidMerge(ints[],intlow,inthigh){if(low<high){intmid=(low+high)/2;Merge(s,low,mid);Merge(s,mid+1,high);all+=MergeSort(s,low,mid+1,high);}}intmain(){intn;scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&a[i]);Merge(a,0,n-1);printf("%lld",all);return0;}