#include<iostream>using namespace std;const int N = 5e5+5;int q[N],tmp[N],n;long long ans = 0; void merge_sort(int q[],int l,int r){    if(l>=r)        return;    int mid = l+r >> 1;    merge_sort(q,l,mid);    merge_sort(q,mid+1,r);    int i = l, j = mid + 1,k = 0;    while(i<=mid && j<=r)     {        if(q[i]<=q[j])  tmp[k++] = q[i++];        else    tmp[k++] = q[j++],ans += mid - i + 1;      }    while(i<=mid)          tmp[k++] = q[i++];    while(j<=r)        tmp[k++] = q[j++];    for(int i = l,j = 0; i<=r ;i++,j++)        q[i] = tmp[j];}int main(){    cin>>n;    for(int i=0; i < n ;i++)        cin>>q[i];    merge_sort(q,0,n-1);    cout<<ans<<endl;}#include<iostream>usingnamespacestd;constintN=5e5+5;intq[N],tmp[N],n;longlongans=0;voidmerge_sort(intq[],intl,intr){if(l>=r)return;intmid=l+r>>1;merge_sort(q,l,mid);merge_sort(q,mid+1,r);inti=l,j=mid+1,k=0;while(i<=mid&&j<=r){if(q[i]<=q[j])tmp[k++]=q[i++];elsetmp[k++]=q[j++],ans+=mid-i+1;}while(i<=mid)tmp[k++]=q[i++];while(j<=r)tmp[k++]=q[j++];for(inti=l,j=0;i<=r;i++,j++)q[i]=tmp[j];}intmain(){cin>>n;for(inti=0;i<n;i++)cin>>q[i];merge_sort(q,0,n-1);cout<<ans<<endl;}#include<iostream>usingnamespacestd;constintN=5e5+5;intq[N],tmp[N],n;longlongans=0;voidmerge_sort(intq[],intl,intr){if(l>=r)return;intmid=l+r>>1;merge_sort(q,l,mid);merge_sort(q,mid+1,r);inti=l,j=mid+1,k=0;while(i<=mid&&j<=r){if(q[i]<=q[j])tmp[k++]=q[i++];elsetmp[k++]=q[j++],ans+=mid-i+1;}while(i<=mid)tmp[k++]=q[i++];while(j<=r)tmp[k++]=q[j++];for(inti=l,j=0;i<=r;i++,j++)q[i]=tmp[j];}intmain(){cin>>n;for(inti=0;i<n;i++)cin>>q[i];merge_sort(q,0,n-1);cout<<ans<<endl;}#include<iostream>usingnamespacestd;constintN=5e5+5;intq[N],tmp[N],n;longlongans=0;voidmerge_sort(intq[],intl,intr){if(l>=r)return;intmid=l+r>>1;merge_sort(q,l,mid);merge_sort(q,mid+1,r);inti=l,j=mid+1,k=0;while(i<=mid&&j<=r){if(q[i]<=q[j])tmp[k++]=q[i++];elsetmp[k++]=q[j++],ans+=mid-i+1;}while(i<=mid)tmp[k++]=q[i++];while(j<=r)tmp[k++]=q[j++];for(inti=l,j=0;i<=r;i++,j++)q[i]=tmp[j];}intmain(){cin>>n;for(inti=0;i<n;i++)cin>>q[i];merge_sort(q,0,n-1);cout<<ans<<endl;}