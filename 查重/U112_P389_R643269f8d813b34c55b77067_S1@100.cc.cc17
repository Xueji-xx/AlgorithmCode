#include<cstdio>int a[500005],b[500005],n;long long ans;			//数据比较大，得用long long类型，防止溢出 void mergeSort(int left,int right){	if(left==right) return;	int mid=(left+right)/2;	mergeSort(left,mid);		//递归算法 	mergeSort(mid+1,right);	int i=left,j=mid+1,k=left;	while(i<=mid&&j<=right){		if(a[i]<=a[j]) b[k++]=a[i++];		else{			b[k++]=a[j++];			ans+=mid-i+1;	//累计 		} 	}	while(i<=mid) b[k++]=a[i++];	while(j<=right) b[k++]=a[j++];	for(int i=left;i<=right;i++) a[i]=b[i];   //排序之后b[]赋值给a[] }int main() {	scanf("%d",&n);	for(int i=0;i<n;i++) scanf("%d",&a[i]);	mergeSort(0,n-1);	printf("%lld",ans);	return 0;}#include<cstdio>inta[500005],b[500005],n;longlongans;			//数据比较大，得用longlong类型，防止溢出voidmergeSort(intleft,intright){	if(left==right)return;	intmid=(left+right)/2;	mergeSort(left,mid);		//递归算法	mergeSort(mid+1,right);	inti=left,j=mid+1,k=left;	while(i<=mid&&j<=right){		if(a[i]<=a[j])b[k++]=a[i++];		else{			b[k++]=a[j++];			ans+=mid-i+1;	//累计		}	}	while(i<=mid)b[k++]=a[i++];	while(j<=right)b[k++]=a[j++];	for(inti=left;i<=right;i++)a[i]=b[i];//排序之后b[]赋值给a[]}intmain(){	scanf("%d",&n);	for(inti=0;i<n;i++)scanf("%d",&a[i]);	mergeSort(0,n-1);	printf("%lld",ans);	return0;}#include<cstdio>inta[500005],b[500005],n;longlongans;//数据比较大，得用longlong类型，防止溢出voidmergeSort(intleft,intright){if(left==right)return;intmid=(left+right)/2;mergeSort(left,mid);//递归算法mergeSort(mid+1,right);inti=left,j=mid+1,k=left;while(i<=mid&&j<=right){if(a[i]<=a[j])b[k++]=a[i++];else{b[k++]=a[j++];ans+=mid-i+1;//累计}}while(i<=mid)b[k++]=a[i++];while(j<=right)b[k++]=a[j++];for(inti=left;i<=right;i++)a[i]=b[i];//排序之后b[]赋值给a[]}intmain(){scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&a[i]);mergeSort(0,n-1);printf("%lld",ans);return0;}#include<cstdio>inta[500005],b[500005],n;longlongans;//数据比较大，得用longlong类型，防止溢出voidmergeSort(intleft,intright){if(left==right)return;intmid=(left+right)/2;mergeSort(left,mid);//递归算法mergeSort(mid+1,right);inti=left,j=mid+1,k=left;while(i<=mid&&j<=right){if(a[i]<=a[j])b[k++]=a[i++];else{b[k++]=a[j++];ans+=mid-i+1;//累计}}while(i<=mid)b[k++]=a[i++];while(j<=right)b[k++]=a[j++];for(inti=left;i<=right;i++)a[i]=b[i];//排序之后b[]赋值给a[]}intmain(){scanf("%d",&n);for(inti=0;i<n;i++)scanf("%d",&a[i]);mergeSort(0,n-1);printf("%lld",ans);return0;}